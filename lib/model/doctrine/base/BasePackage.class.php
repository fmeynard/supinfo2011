<?php

/**
 * BasePackage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $short_description
 * @property clob $description
 * @property float $price
 * @property boolean $is_active
 * @property string $image
 * @property integer $category_id
 * @property Category $Category
 * @property Doctrine_Collection $Offers
 * @property Doctrine_Collection $PackagesOffers
 * @property Doctrine_Collection $UserHasPackage
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getShortDescription()  Returns the current record's "short_description" value
 * @method clob                getDescription()       Returns the current record's "description" value
 * @method float               getPrice()             Returns the current record's "price" value
 * @method boolean             getIsActive()          Returns the current record's "is_active" value
 * @method string              getImage()             Returns the current record's "image" value
 * @method integer             getCategoryId()        Returns the current record's "category_id" value
 * @method Category            getCategory()          Returns the current record's "Category" value
 * @method Doctrine_Collection getOffers()            Returns the current record's "Offers" collection
 * @method Doctrine_Collection getPackagesOffers()    Returns the current record's "PackagesOffers" collection
 * @method Doctrine_Collection getUserHasPackage()    Returns the current record's "UserHasPackage" collection
 * @method Package             setId()                Sets the current record's "id" value
 * @method Package             setName()              Sets the current record's "name" value
 * @method Package             setShortDescription()  Sets the current record's "short_description" value
 * @method Package             setDescription()       Sets the current record's "description" value
 * @method Package             setPrice()             Sets the current record's "price" value
 * @method Package             setIsActive()          Sets the current record's "is_active" value
 * @method Package             setImage()             Sets the current record's "image" value
 * @method Package             setCategoryId()        Sets the current record's "category_id" value
 * @method Package             setCategory()          Sets the current record's "Category" value
 * @method Package             setOffers()            Sets the current record's "Offers" collection
 * @method Package             setPackagesOffers()    Sets the current record's "PackagesOffers" collection
 * @method Package             setUserHasPackage()    Sets the current record's "UserHasPackage" collection
 * 
 * @package    d
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BasePackage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('package');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('short_description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('price', 'float', 7, array(
             'type' => 'float',
             'scale' => 2,
             'notnull' => true,
             'length' => 7,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('type', 'MySIAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('Offer as Offers', array(
             'refClass' => 'PackageHasOffer',
             'local' => 'package_id',
             'foreign' => 'offer_id'));

        $this->hasMany('PackageHasOffer as PackagesOffers', array(
             'local' => 'id',
             'foreign' => 'package_id'));

        $this->hasMany('UserHasPackage', array(
             'local' => 'id',
             'foreign' => 'package_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->actAs($sluggable0);
    }
}