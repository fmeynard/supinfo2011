<?php

/**
 * BaseFrmForum
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property clob $description
 * @property integer $rank
 * @property integer $category_id
 * @property integer $latest_post_id
 * @property integer $nb_posts
 * @property integer $nb_topics
 * @property FrmCategory $FrmCategory
 * @property FrmPost $FrmPost
 * @property Doctrine_Collection $FrmTopic
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method clob                getDescription()    Returns the current record's "description" value
 * @method integer             getRank()           Returns the current record's "rank" value
 * @method integer             getCategoryId()     Returns the current record's "category_id" value
 * @method integer             getLatestPostId()   Returns the current record's "latest_post_id" value
 * @method integer             getNbPosts()        Returns the current record's "nb_posts" value
 * @method integer             getNbTopics()       Returns the current record's "nb_topics" value
 * @method FrmCategory         getFrmCategory()    Returns the current record's "FrmCategory" value
 * @method FrmPost             getFrmPost()        Returns the current record's "FrmPost" value
 * @method Doctrine_Collection getFrmTopic()       Returns the current record's "FrmTopic" collection
 * @method FrmForum            setId()             Sets the current record's "id" value
 * @method FrmForum            setName()           Sets the current record's "name" value
 * @method FrmForum            setDescription()    Sets the current record's "description" value
 * @method FrmForum            setRank()           Sets the current record's "rank" value
 * @method FrmForum            setCategoryId()     Sets the current record's "category_id" value
 * @method FrmForum            setLatestPostId()   Sets the current record's "latest_post_id" value
 * @method FrmForum            setNbPosts()        Sets the current record's "nb_posts" value
 * @method FrmForum            setNbTopics()       Sets the current record's "nb_topics" value
 * @method FrmForum            setFrmCategory()    Sets the current record's "FrmCategory" value
 * @method FrmForum            setFrmPost()        Sets the current record's "FrmPost" value
 * @method FrmForum            setFrmTopic()       Sets the current record's "FrmTopic" collection
 * 
 * @package    d
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseFrmForum extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('frm_Forum');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('rank', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('latest_post_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('nb_posts', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('nb_topics', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'MySIAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('FrmCategory', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('FrmPost', array(
             'local' => 'latest_post_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('FrmTopic', array(
             'local' => 'id',
             'foreign' => 'forum_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}