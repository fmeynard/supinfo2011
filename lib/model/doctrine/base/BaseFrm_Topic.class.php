<?php

/**
 * BaseFrm_Topic
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property boolean $is_sticked
 * @property boolean $is_locked
 * @property integer $forum_id
 * @property integer $latest_post_id
 * @property integer $user_id
 * @property integer $nb_posts
 * @property integer $nb_views
 * @property Frm_Forum $Frm_Forum
 * @property Frm_Post $Frm_Post
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Frm_TopicView
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getTitle()          Returns the current record's "title" value
 * @method boolean             getIsSticked()      Returns the current record's "is_sticked" value
 * @method boolean             getIsLocked()       Returns the current record's "is_locked" value
 * @method integer             getForumId()        Returns the current record's "forum_id" value
 * @method integer             getLatestPostId()   Returns the current record's "latest_post_id" value
 * @method integer             getUserId()         Returns the current record's "user_id" value
 * @method integer             getNbPosts()        Returns the current record's "nb_posts" value
 * @method integer             getNbViews()        Returns the current record's "nb_views" value
 * @method Frm_Forum           getFrmForum()       Returns the current record's "Frm_Forum" value
 * @method Frm_Post            getFrmPost()        Returns the current record's "Frm_Post" value
 * @method sfGuardUser         getSfGuardUser()    Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getFrmTopicView()   Returns the current record's "Frm_TopicView" collection
 * @method Frm_Topic           setId()             Sets the current record's "id" value
 * @method Frm_Topic           setTitle()          Sets the current record's "title" value
 * @method Frm_Topic           setIsSticked()      Sets the current record's "is_sticked" value
 * @method Frm_Topic           setIsLocked()       Sets the current record's "is_locked" value
 * @method Frm_Topic           setForumId()        Sets the current record's "forum_id" value
 * @method Frm_Topic           setLatestPostId()   Sets the current record's "latest_post_id" value
 * @method Frm_Topic           setUserId()         Sets the current record's "user_id" value
 * @method Frm_Topic           setNbPosts()        Sets the current record's "nb_posts" value
 * @method Frm_Topic           setNbViews()        Sets the current record's "nb_views" value
 * @method Frm_Topic           setFrmForum()       Sets the current record's "Frm_Forum" value
 * @method Frm_Topic           setFrmPost()        Sets the current record's "Frm_Post" value
 * @method Frm_Topic           setSfGuardUser()    Sets the current record's "sfGuardUser" value
 * @method Frm_Topic           setFrmTopicView()   Sets the current record's "Frm_TopicView" collection
 * 
 * @package    d
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseFrm_Topic extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('frm__topic');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_sticked', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_locked', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('forum_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('latest_post_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('nb_posts', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('nb_views', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));

        $this->option('type', 'MySIAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Frm_Forum', array(
             'local' => 'forum_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Frm_Post', array(
             'local' => 'latest_post_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('Frm_TopicView', array(
             'local' => 'id',
             'foreign' => 'topic_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}