options:
  type: MySIAM
  
Package:
  actAs:
      Sluggable:
        fields: [name]
  tableName:            package
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true}
    name:               { type: string(64), notnull: true }
    short_description:  { type: string(255) }
    description:        { type: clob }
    price:              { type: float(7), scale: 2, notnull: true }
    is_active:          { type: boolean, default: 0 }
    image:              { type: string(255) }
    category_id:        { type: integer, notnull: true }
  relations:
    Category:           { class: Category, local: category_id, foreign: id, onDelete: SET NULL }

PackageLine:
  tableName:            package_line
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true}
    name:               { type: string(64), notnull: true }
    image:              { type: string(255) }
    package_id:         { type: integer }
  relations:
    Package:            { class: Package, local: package_id, foreign: id, onDelete: SET NULL }

SingleOffer:
  actAs:
      Sluggable:
        fields: [name]
  tableName:            single_offer
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true}
    name:               { type: string(64), notnull: true }
    short_description:  { type: string(255) }
    description:        { type: clob }
    price:              { type: float(7), scale: 2 }
    category_id:        { type: integer, notnull: true }
    is_active:          { type: boolean }
  relations:
    Category:           { class: Category, local: category_id, foreign: id, onDelete: SET NULL }

Category:
  actAs:
      Sluggable:
        fields: [name]
  tableName:            category
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true}
    name:               { type: string(64), notnull: true }
    short_description:  { type: string(255) }
    description:        { type: clob }
    image:              { type: string(255) }
    category_id:        { type: integer }
    is_active:          { type: boolean }
  relations:
    Category:           { class: Category, local: category_id, foreign: id }

Agency:
  actAs:
      Sluggable:
        fields: [name]
  tableName:            agency
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true}
    name:               { type: string(64), notnull: true }
    address:            { type: string(255), notnull: true }
    address_bis:        { type: string(255) }
    phone:              { type: string(15) }
    mail:               { type: string(100) }
    fax:                { type: string(15) }

AgencyRoom:
  actAs:
      Sluggable:
        fields: [name]
  tableName:            agency_room
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true}
    name:               { type: string(64), notnull: true }
    agency_id:          { type: integer }
    capacity:           { type: integer }
  relations:
    Agency:             { type: Agency, local: agency_id, foreign: id, onDelete: SET NULL }

FormationCenter:
  actAs:
      Sluggable:
        fields: [name]
  tableName:            formation_center
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true}
    name:               { type: string(64), notnull: true }
    image:              { type: string(255) }
    address:            { type: string(255) }
    address_bis:        { type: string(255) }
    capacity:           { type: integer }

FormationType:
  tableName:            formation_type
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true}
    name:               { type: string(64), notnull: true }

FormationSession:
  tableName:            formation_session
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true}
    name:               { type: string(64) }
    formation_type_id:  { type: integer }
    capacity:           { type: integer }
    date_start:         { type: timestamp }
    date_end:           { type: timestamp }
  relations:
    FormationType:      { class: FormationType, foreign: id, local: formation_type_id, onDelete: SET NULL }

VehicleType:
  tableName:            vehicle_type
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true }
    name:               { type: string(64), notnull: true }

Vehicle:
  actAs:
      Sluggable:
        fields: [name]
  tableName:            vehicle
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true}
    name:               { type: string(64), notnull: true }
    brand:              { type: string(64) }
    model:              { type: string(64) }
    year:               { type: timestamp }
    purchase_date:      { type: timestamp }
    next_verif_start:   { type: timestamp }
    next_verif_end:     { type: timestamp }
    agency_id:          { type: integer, notnull: true }
    vehicle_type_id:    { type: integer, notnull: true }
  relations: 
    Agency:             { class: Agency, foreign: id, local: agency_id }
    VehicleType:        { class: VehicleType, foreign: id, local: vehicle_type_id }

VehicleVerification:
  tableName:            vehicle_verification
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true}
    vehicle_id:         { type: integer }
    date_start:         { type: timestamp }
    date_end:           { type: timestamp }
  relations:
    Vehicle:            { class: Vehicle, foreign: id, local: vehicle_id, onDelete: NULL }
    
    
sfGuardUserProfile:
  actAs: 
    Sluggable:
      fields:           [first_name, last_name]
  tableName:            sf_guard_user_profile
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true}
    sf_guard_user_id:   { type: integer, notnull: true }
    agency_id:          { type: integer }
    first_name:         { type: string(64) }
    last_name:          { type: string(64) }
    birthday:           { type: timestamp }
    type:               { type: integer }
    mail:               { type: string(64) }
    phone:              { type: string(15) }
    mobile:             { type: string(15) }
  relations:
    sfGuardUser:        { class: sfGuardUser, local: sf_guard_user_id, foreign: id, type: one , foreignType: one, foreignAlias: Profile }
    Agency:             { class: Agency, local: agency_id, foreign: id }

#Dï¿½but community
CommunityCategory:
  actAs:
    Sluggable:
      fields:           [name]
  tableName:            community_category
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true }
    name:               { type: string(64), notnull: true }
    description:        { type: string(255) }
    is_active:          { type: boolean }

CommunityPost:
  actAs:
    Sluggable:
      fields:           [title]
  tableName:            community_post
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true }
    title:              { type: string(64), notnull: true }
    content:            { type: clob, notnull: true }
    date:               { type: timestamp }
    category_id:        { type: integer }
    is_active:          { type: boolean }
  relations:
    CommunityCategory:  { class: CommunityCategory, local: category_id, foreign: id }
#Fin community




    ### Forum ###
Frm_Category:
  actAs:
    Timestampable:
    Sluggable:
      fields:         [name]
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true }
    name:             string(255)
    description:      clob
    rank:             integer

Frm_Forum:
  actAs:
    Timestampable:
    Sluggable:
      fields:         [name]
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true }
    name:             string(255)
    description:      clob
    rank:             integer
    category_id:      integer
    latest_post_id:   integer
    nb_posts:         integer
    nb_topics:        integer
  relations:
    Frm_Category:
      local:          category_id
      foreign:        id
      type:           one
      onDelete:       CASCADE
    Frm_Post:
      local:          latest_post_id
      foreign:        id
      type:           one
      onDelete:       SET NULL

Frm_Topic:
  actAs:
    Timestampable:
    Sluggable:
      fields:         [title]
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true }
    title:            string(255)
    is_sticked:
      type:           boolean
      default:        0
    is_locked:
      type:           boolean
      default:        0
    forum_id:         integer
    latest_post_id:   integer
    user_id:          integer
    nb_posts:
      type:           integer
      default:        0
    nb_views:
      type:           integer
      default:        0
  relations:
    Frm_Forum:
      local:          forum_id
      foreign:        id
      type:           one
      onDelete:       CASCADE
    Frm_Post:
      local:          latest_post_id
      foreign:        id
      type:           one
      onDelete:       SET NULL
    sfGuardUser:
      local:          user_id
      foreign:        id
      type:           one
      onDelete:       SET NULL

Frm_Post:
  actAs:
    Timestampable:
  columns:
    id:                 { type: integer, notnull: true, primary: true, autoincrement: true }
    title:            string(255)
    content:          clob
    topic_id:         integer
    user_id:          integer
    forum_id:         integer
    author_name:      string(255)
  relations:
    Frm_Forum:
      local:          forum_id
      foreign:        id
      type:           one
      onDelete:       CASCADE
    Frm_Topic:
      local:          topic_id
      foreign:        id
      type:           one
      onDelete:       CASCADE
    sfGuardUser:
      local:          user_id
      foreign:        id
      type:           one
      onDelete:       CASCADE


Frm_Rank:
  actAs:
    Sluggable:
      fields:         [title]
  columns:
    nb_posts:
      type: integer
      notnull: true
    image:
      type: varchar(255)
    title:
      type: string(30)
      notnull: true

Frm_TopicView:
  actAs:
    Timestampable:
  columns:
    user_id:
      type:           integer
      primary:        true
    topic_id:
      type:           integer
      primary:        true
  relations:
    sfGuardUser:
      local:          user_id
      foreign:        id
      type:           one
      onDelete:       CASCADE
    Frm_Topic:
      local:          topic_id
      foreign:        id
      type:           one
      onDelete:       CASCADE


    ### End Forum ###